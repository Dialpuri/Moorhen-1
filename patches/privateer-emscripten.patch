+++ privateer-MKIV/src/privateer.cpp	2022-03-21 10:47:53.000000000 +0000
--- privateer-MKIV/src/privateer-emscripten.cpp	2022-03-21 10:47:48.000000000 +0000
@@ -19,6 +19,11 @@
 #include <iostream>
 #include <iomanip>
 #include <future>
+
+#if defined(__EMSCRIPTEN__)
+#include <emscripten.h>
+#endif
+
 #include "privateer-json.h"
 #include "privateer-lib.h"
 #include "privateer-cryo_em.h"
@@ -46,11 +51,30 @@
 using clipper::data32::Flag;
 typedef clipper::HKL_data_base::HKL_reference_index HRI;
 
+#if defined(__EMSCRIPTEN__)
+#ifdef NODERAWFS
+#define CWD ""
+#else
+#define CWD "/working/"
+#endif
+#else
+#define CWD ""
+#endif
 
 // Glytoucan has to be the last arguement for some reason, need to fix this bs. Otherwise new arguements will not be picked up.
 
 int main(int argc, char** argv)
 {
+#if defined(__EMSCRIPTEN__)
+#ifndef NODERAWFS
+    // mount the current folder as a NODEFS instance
+    // inside of emscripten
+    EM_ASM(
+            FS.mkdir('/working');
+            FS.mount(NODEFS, { root: '.' }, '/working');
+          );
+#endif
+#endif
     CCP4Program prog( "Privateer", program_version.c_str(), "$Date: 2021/02/06" );
 
     prog.set_termination_message( "Failed" );
@@ -141,21 +165,21 @@
         {
           if ( ++arg < args.size() )
           {
-            output_mapcoeffs_mtz = args[arg];
+            output_mapcoeffs_mtz = std::string(CWD) + args[arg];
             output_mtz = true;
           }
         }
         else if ( args[arg] == "-pdbin" )
         {
           if ( ++arg < args.size() )
-            input_model = args[arg];
+            input_model = std::string(CWD) + args[arg];
         }
         else if ( args[arg] == "-mtzin" )
         {
           if ( ++arg < args.size() )
           {
             useMTZ = true;
-            input_reflections_mtz = args[arg];
+            input_reflections_mtz = std::string(CWD) + args[arg];
           }
         }
         else if ( args[arg] == "-mapin" )
@@ -163,7 +187,7 @@
           if ( ++arg < args.size() )
           {
             useMRC = true;
-            input_cryoem_map = args[arg];
+            input_cryoem_map = std::string(CWD) + args[arg];
           }
         }
         else if ( args[arg] == "-resolution" )
@@ -182,7 +206,7 @@
         else if ( args[arg] == "-cifin" )
         {
           if ( ++arg < args.size() )
-            input_reflections_cif = args[arg];
+            input_reflections_cif = std::string(CWD) + args[arg];
         }
         else if ( args[arg] == "-list" )
         {
@@ -285,7 +309,7 @@
             if(clipper::String(args[arg])[0] != '-')
             {
               ipwurcsjson = args[arg];
-              std::string fileName = ipwurcsjson.tail();
+              std::string fileName = std::string(CWD) + ipwurcsjson.tail();
               std::string fileExtension = fileName.substr( fileName.length() - 5 );
 
               if (fileExtension != ".json" || fileExtension.empty() || fileExtension.length() != 5)
diff -u privateer-MKIV/src/privateer-restraints.cpp /Users/junk/privateer/privateer-restraints.cpp
+++ privateer-MKIV/src/privateer-restraints.cpp	2021-09-27 08:56:13.000000000 +0100
--- /Users/junk/privateer/privateer-restraints.cpp	2022-03-09 14:27:21.000000000 +0000
@@ -6,7 +6,9 @@
 // The University of York
 
 #include "privateer-restraints.h"
+#if !defined(__EMSCRIPTEN__)
 using namespace pybind11::literals;
+#endif
 
 std::string privateer::restraints::check_monlib_access ( ) {
 
@@ -437,6 +439,7 @@
 }
 
 // This function is similar to gemmi's but returns a standard python object
+#if !defined(__EMSCRIPTEN__)
 pybind11::dict privateer::restraints::CarbohydrateDictionary::get_bond (std::string atom_1, std::string atom_2) {
 
   for ( auto bond : this->chemical_component.rt.bonds ) {
@@ -452,6 +455,7 @@
   auto result = pybind11::dict ("length"_a="", "esd"_a="");
   return result;
 }
+#endif
 // End CarbohydrateDictionary class
 
 
diff -u privateer-MKIV/src/privateer-restraints.h /Users/junk/privateer/privateer-restraints.h
+++ privateer-MKIV/src/privateer-restraints.h	2021-09-27 08:56:13.000000000 +0100
--- /Users/junk/privateer/privateer-restraints.h	2022-03-09 14:27:21.000000000 +0000
@@ -10,7 +10,9 @@
 #include <gemmi/cif.hpp>
 #include <gemmi/calculate.hpp>
 #include <gemmi/to_cif.hpp>  // for write_cif_to_stream
+#if !defined(__EMSCRIPTEN__)
 #include <pybind11/pybind11.h>
+#endif
 #include <string>
 #include <locale>
 #include <fstream>
@@ -80,7 +82,9 @@
         float get_torsion_from_conformer (std::string a1, std::string a2, std::string a3, std::string a4);
         void add_inverted_torsions ();
         void print_torsion_restraints ();
+#if !defined(__EMSCRIPTEN__)
         pybind11::dict get_bond (std::string atom_1, std::string atom_2);
+#endif
 
       private:
         gemmi::ChemComp chemical_component;
