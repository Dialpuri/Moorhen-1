#!/bin/bash

source VERSIONS

mkdir -p checkout
cd checkout

echo "Checking out libccp4"
curl -L http://ftp.ccp4.ac.uk/opensource/libccp4-$libccp4_release.tar.gz -o libccp4-$libccp4_release.tar.gz
echo

echo "Checking out clipper"
curl -L http://www.ysbl.york.ac.uk/jsd523/clipper-gemmi-wrapper-$clipper_release.tar.gz -o clipper-gemmi-wrapper.tar.gz
echo

echo "Checking out ssm"
curl http://ftp.ccp4.ac.uk/opensource/ssm-$ssm_release.tar.gz -o ssm-$ssm_release.tar.gz
echo

echo "Checking out mmdb2"
curl -L http://ftp.ccp4.ac.uk/opensource/mmdb2-$mmdb_release.tar.gz -o mmdb2-$mmdb_release.tar.gz
echo

echo "Checking out gemmi"
git clone https://github.com/project-gemmi/gemmi.git gemmi
cd gemmi
git checkout $gemmi_release
cd ..
echo

echo "Checking out monomers"
git clone https://github.com/MonomerLibrary/monomers monomers
echo

echo "Checking out SliceNDice"
git clone https://github.com/hlasimpk/slicendice_cpp.git
echo

echo "Downloading out fftw-$fftw_release"
curl -L http://www.fftw.org/fftw-$fftw_release.tar.gz -o fftw-$fftw_release.tar.gz
echo

echo "Downloading gsl-$gsl_release"
curl -L https://mirror.ibcp.fr/pub/gnu/gsl/gsl-$gsl_release.tar.gz -o gsl-$gsl_release.tar.gz
echo

echo "Downloading coot-1"
git clone --branch main https://github.com/pemsley/coot.git coot-1.0
echo

echo "Downloading glm"
curl -L https://github.com/g-truc/glm/archive/refs/tags/$glm_release.tar.gz -o glm-$glm_release.tar.gz
echo

echo "Downloading RDKit source"
curl -L https://github.com/rdkit/rdkit/archive/refs/tags/$rdkit_release.tar.gz -o "$rdkit_release.tar.gz"
echo

echo "Downloading and Unpacking Privateer"
curl -L https://github.com/glycojones/privateer/archive/refs/tags/WASM-0.3.4.tar.gz -o privateer-wasm.tar.gz
tar xf privateer-wasm.tar.gz
mv privateer-WASM-* privateer-wasm

echo "Unpacking libccp4 source"
tar xf libccp4-$libccp4_release.tar.gz
ln -s libccp4-$libccp4_release libccp4
echo

echo "Unpacking clipper source"
tar xf clipper-gemmi-wrapper.tar.gz
mv clipper-gemmi-wrapper clipper
echo

echo "Unpacking ssm source"
tar xf ssm-$ssm_release.tar.gz
ln -s ssm-$ssm_release ssm
echo

echo "Unpacking mmdb2 source"
tar xf mmdb2-$mmdb_release.tar.gz
ln -s mmdb2-$mmdb_release mmdb2
echo

echo "Unpacking RDKit source"
tar xf "$rdkit_release.tar.gz"
echo

echo "Unpacking fftw-$fftw_release"
tar xf fftw-$fftw_release.tar.gz
echo

echo "Unpacking glm-$glm_release"
tar xf glm-$glm_release.tar.gz
echo

patch -p0 < ../patches/ccp4-emscripten.patch 
patch -p0 < ../patches/superpose-emscripten.patch
cd ..
echo

echo "Unpacking gsl-$gsl_release"
tar xf checkout/gsl-$gsl_release.tar.gz
echo

# Create an empty file silly.c and then compile it with USE_ZLIB and USE_LIBPNG to force emsdk to get zlib/png.
echo "Attempting to get emsdk zlib/png ports"
echo
echo "" > silly.c
emcc silly.c -s USE_ZLIB=1 -s USE_LIBPNG=1 -s USE_FREETYPE=1
rm -f silly.c
rm -f a.out.js
rm -f a.out.wasm

# Get PapaParse
echo "Downloading papaparse.min.js"
echo
curl -L https://unpkg.com/papaparse@latest/papaparse.min.js -o wasm_src_frontend/papaparse.min.js
echo

# Get Chart.Js
echo "Downloading chart.js"
echo
curl -L https://cdn.jsdelivr.net/npm/chart.js -o wasm_src_frontend/chart.js
echo

# Boost
echo "Checking out boost"
cd checkout
curl -L https://github.com/boostorg/boost/releases/download/boost-$boost_release/boost-$boost_release.tar.gz  -o boost_$boost_release.tar.gz
tar xf boost_$boost_release.tar.gz
cd ..
ln -s checkout/boost_$boost_release boost
echo
patch -p0 < patches/boost-emscripten.patch
patch -p0 < patches/boost-cxx-17.patch

ln -s checkout/rdkit-$rdkit_release rdkit

echo "Linking glm headers"
mkdir -p include
cd include
ln -s ../checkout/glm-$glm_release/glm glm
cd ..
