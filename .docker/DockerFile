# UBUNTU SETUP
FROM ubuntu:focal AS build
ENV TZ=Europe/London
ARG DEBIAN_FRONTEND=noninteractive
SHELL ["/bin/bash", "-c"]
RUN apt-get update
RUN apt-get -y install autoconf autotools-dev libtool bzr git curl cmake gcc clang python3-dev libz-dev npm

# INSTALL EMSCRIPTEN
RUN mkdir -p /opt/
WORKDIR /opt/
RUN  git clone https://github.com/emscripten-core/emsdk.git
RUN /opt/emsdk/emsdk install latest
RUN /opt/emsdk/emsdk activate latest
RUN source /opt/emsdk/emsdk_env.sh

# CLONE CCP4 WEB-ASSEMBLY AND DOWNLOAD SOURCES
RUN  git clone https://github.com/stuartjamesmcnicholas/CCP4-Web-Assembly.git ccp4_wasm
WORKDIR /opt/ccp4_wasm/
RUN /opt/ccp4_wasm/get_sources

# INSTALL  REACT-APP WEBPACK
WORKDIR /opt/ccp4_wasm/react-app
RUN npm install

# INSTALL EMSCRIPTEN STUFF
WORKDIR /opt/ccp4_wasm/
RUN source /opt/emsdk/emsdk_env.sh && emcmake cmake .
RUN source /opt/emsdk/emsdk_env.sh && echo "" > silly.c && emcc silly.c -s USE_ZLIB=1 -s USE_LIBPNG=1 && rm -f silly.c && emmake make
RUN source /opt/emsdk/emsdk_env.sh && echo "" > silly.c && emcc silly.c -s USE_ZLIB=1 -s USE_LIBPNG=1 && rm -f silly.c && emmake make install

# INSTALL WEBPACK
WORKDIR /opt/ccp4_wasm/baby-gru/
RUN cp -r /opt/ccp4_wasm/react-app/src /opt/ccp4_wasm/baby-gru/src/WebGL 
RUN npm install

# MANAGE NODEJS VERSION
RUN curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
RUN export NVM_DIR="$HOME/.nvm" ; [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" ; [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" ; nvm install 14
RUN export NVM_DIR="$HOME/.nvm" ; [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" ; [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" ; nvm use 14

# EXPOSE PORT
EXPOSE 3000
